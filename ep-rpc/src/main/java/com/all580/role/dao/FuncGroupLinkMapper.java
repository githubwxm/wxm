package com.all580.role.dao;

import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface FuncGroupLinkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_func_group_link
     *
     * @mbggenerated Wed Jun 28 17:40:48 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_func_group_link
     *
     * @mbggenerated Wed Jun 28 17:40:48 CST 2017
     */
    int insert(Map record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_func_group_link
     *
     * @mbggenerated Wed Jun 28 17:40:48 CST 2017
     */
    int insertSelective(Map record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_func_group_link
     *
     * @mbggenerated Wed Jun 28 17:40:48 CST 2017
     */
    Map selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_func_group_link
     *
     * @mbggenerated Wed Jun 28 17:40:48 CST 2017
     */
    int updateByPrimaryKeySelective(Map record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_func_group_link
     *
     * @mbggenerated Wed Jun 28 17:40:48 CST 2017
     */
    int updateByPrimaryKey(Map record);

    int addFuncGroupLinkList(@Param("func_group_id") Integer func_group_id, @Param("func_ids") List<Integer> func_ids);
    List<Map<String,Object>> selectFuncGroupLink(Integer func_group_id);
    List<Map<String,Object>> selectPlatFromFuncGroupLink(Integer core_ep_id);

    /**
     * ep_func_type 1平台商  2供应商  4销售商  3 平供  5平销 6供销  7平供销
     * @param ep_func_type
     * @param core_ep_id
     * @return
     */
    List<Map<String,Object>> selectPlatFromFuncGroup(@Param("ep_func_type") Integer ep_func_type, @Param("core_ep_id") Integer core_ep_id);

    /**
     * 查询组关联的所有菜单id
     * @param func_group_id
     * @return
     */
    List<Integer> selectFuncGroupLinkFuncId(Integer func_group_id);
    List<Integer> selectFuncGroupLinkGroupId(Integer func_group_id);
    List<Integer> selectFuncGroupLinkId(@Param("func_group_id") Integer func_group_id, @Param("func_ids") List<Integer> func_ids);
    List<Map> selectFuncGroupLinkMap(@Param("func_group_id") Integer func_group_id, @Param("func_ids") List<Integer> func_ids);
    List<Integer> selectFuncId(@Param("func_ids") List<Integer> func_ids);
    /**
     * 查找默认对应的id
     * @return
     */
    Integer selectFuncGroupLinkDefaultId();
    int deleteFuncGroupId(int func_group_id);
    int deleteFuncGroupLinkList(@Param("func_group_id") Integer func_group_id, @Param("func_ids") List<Integer> func_ids);
    int deleteFuncId(int func_id);
    List<Integer> selectFuncIdLink(int func_id);
}