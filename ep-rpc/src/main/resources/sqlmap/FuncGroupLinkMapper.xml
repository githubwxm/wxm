<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.all580.role.dao.FuncGroupLinkMapper" >

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    `id`, `func_group_id`, `func_id`,CONCAT('',update_time,'') update_time
  </sql>
  <select id="selectByPrimaryKey" resultType="java.util.Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_func_group_link
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    delete from t_func_group_link
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_func_group_link (`func_group_id`, `func_id`)
    values (#{func_group_id,jdbcType=INTEGER}, #{func_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective"  >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_func_group_link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="func_group_id != null" >
        `func_group_id`,
      </if>
      <if test="func_id != null" >
        `func_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="func_group_id != null" >
        #{func_group_id,jdbcType=INTEGER},
      </if>
      <if test="func_id != null" >
        #{func_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"  >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    update t_func_group_link
    <set >
      <if test="func_group_id != null" >
        `func_group_id` = #{func_group_id,jdbcType=INTEGER},
      </if>
      <if test="func_id != null" >
        `func_id` = #{func_id,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey"  >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 28 17:40:48 CST 2017.
    -->
    update t_func_group_link
    set `func_group_id` = #{func_group_id,jdbcType=INTEGER},
      `func_id` = #{func_id,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectFuncGroupLink" resultType="java.util.Map">
         select f.*,IF(rf.id is NUll,0,1) owned
                from t_func f
                left join t_func_group_link rf on f.id = rf.func_id
                and func_group_id=#{func_group_id}
                order by pid,seq;
  </select>
  <select id="selectPlatFromFuncGroupLink" resultType="java.util.Map">
  select f.*,IF(rf.id is NUll,0,1) owned
  from t_func f
  left join t_func_group_link rf on f.id = rf.func_id
  and func_group_id in(select func_group_id from t_plat_func where core_ep_id=#{core_ep_id} union select id as func_group_id  from t_func_group where show_type=0)
  order by pid,seq;
</select>

  <select id="selectPlatFromFuncGroup" resultType="java.util.Map">
    select g.* ,IF(f.func_group_id is NUll,0,1) owned from t_func_group g
    left join t_plat_func f on f.func_group_id=g.id  and f.core_ep_id=#{core_ep_id}
     where ep_func_type &amp; #{ep_func_type} and show_type=1  order by pid,g.id;
  </select>

  <select id="selectFuncGroupLinkFuncId" resultType="java.lang.Integer">
    select func_id from t_func_group_link where func_group_id=#{func_group_id}
  </select>

  <select id="selectFuncGroupLinkGroupId" resultType="java.lang.Integer">
    select id from t_func_group_link where func_group_id=#{func_group_id}
  </select>

  <select id="selectFuncGroupLinkId" resultType="java.lang.Integer">
    select id from t_func_group_link where   func_group_id=#{func_group_id} and func_id in
    <foreach collection="func_ids" item="item" index="index" separator="," open="(" close=")" >
      #{item}
    </foreach>
  </select>

  <select id="selectFuncGroupLinkMap" resultType="java.util.Map">
    select <include refid="Base_Column_List" /> from t_func_group_link where   func_group_id=#{func_group_id} and func_id in
    <foreach collection="func_ids" item="item" index="index" separator="," open="(" close=")" >
      #{item}
    </foreach>
  </select>
  <select id="selectFuncGroupLinkDefaultId" resultType="java.lang.Integer">
    select id from t_func_group where show_type=0 limit 1;
  </select>
  <select id="selectFuncId" resultType="java.lang.Integer">
    select func_id from t_func_group_link where func_id  in
    <foreach collection="func_ids" item="item" index="index" separator="," open="(" close=")" >
      #{item}
    </foreach>
  </select>
  <insert id="addFuncGroupLinkList">
      insert into t_func_group_link(func_group_id,func_id)
      values
    <foreach collection="func_ids" item="item" index="index" separator="," >
      (#{func_group_id},#{item})
    </foreach>
  </insert>
  <delete id="deleteFuncGroupId">
    delete from t_func_group_link
    where func_group_id=#{func_group_id}
  </delete>

  <delete id="deleteFuncGroupLinkList">
    delete from t_func_group_link
    where func_group_id=#{func_group_id} and  func_id  in
    <foreach collection="func_ids" item="item" index="index" separator="," open="(" close=")" >
      #{item}
    </foreach>
  </delete>
  <delete id="deleteFuncId">
    delete from t_func_group_link  where func_id=#{func_id}
  </delete>
  <select id="selectFuncIdLink" resultType="java.lang.Integer">
    select id from t_func_group_link  where func_id=#{func_id}
  </select>

</mapper>