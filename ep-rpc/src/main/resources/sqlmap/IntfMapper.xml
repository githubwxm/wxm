<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.all580.role.dao.IntfMapper" >

  <sql id="Base_Column_List" >
    id, name, auth, description, seq,func_id ,status,isdelete, create_time,CONCAT('',update_time,'') update_time
  </sql>
  <select id="selectByPrimaryKey" resultType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_intf
    where id = #{id,jdbcType=BIGINT} and isdelete=0
  </select>
  <update id="deleteByPrimaryKey"  >
    delete from t_intf
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="deleteByFuncId">
    update t_intf set isdelete=1  where func_id =#{func_id};
  </update>
  <insert id="insert"  >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_intf (name, auth, description, 
      seq, status, create_time
      )
    values (#{name,jdbcType=VARCHAR}, #{auth,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{seq,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_intf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="auth != null" >
        auth,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="auth != null" >
        #{auth,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"  >
    update t_intf
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="auth != null" >
        auth = #{auth,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey"  >
    update t_intf
    set name = #{name,jdbcType=VARCHAR},
      auth = #{auth,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertIntf">
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
      insert into t_intf (name,auth,status,func_id)values(#{name},#{auth},1,#{func_id});
    <!--<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">-->
      <!--SELECT LAST_INSERT_ID();-->
    <!--</selectKey>-->
  </insert>
  <select id="selectFuncId" resultType="java.util.Map">
    select <include refid="Base_Column_List" /> from t_intf where isdelete=0 and func_id=#{func_id}
    <include refid="limit"/>
  </select>
  <select id="selectFuncIdCount" resultType="java.lang.Integer">
    select count(1) from t_intf where isdelete=0 and func_id=#{func_id}
  </select>

  <select id="intListCount" resultType="java.lang.Integer">
    select count(1) from t_intf;
  </select>
  <select id="authIntf" resultType="java.lang.String">
    select  DISTINCT(auth) from t_ep_role_func tf  JOIN t_intf ti on tf.func_id=ti.func_id
    where ep_role_id=#{ep_role};
  </select>
  <select id="intfList" resultType="java.util.Map">
     select * from t_intf  where isdelete=0  order by func_id
       <include refid="limit"/>
  </select>
  <sql id="limit">
    <if test="limit != null">
      limit #{record_start},#{record_count}
    </if>
  </sql>
</mapper>