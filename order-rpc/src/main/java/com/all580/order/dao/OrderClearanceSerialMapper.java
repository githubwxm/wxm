package com.all580.order.dao;

import com.all580.order.entity.OrderClearanceSerial;
import org.apache.ibatis.annotations.Param;

import java.util.Date;
import java.util.List;
import java.util.Map;

public interface OrderClearanceSerialMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_clearance_serial
     *
     * @mbggenerated Thu Feb 09 14:03:33 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_clearance_serial
     *
     * @mbggenerated Thu Feb 09 14:03:33 CST 2017
     */
    int insert(OrderClearanceSerial record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_clearance_serial
     *
     * @mbggenerated Thu Feb 09 14:03:33 CST 2017
     */
    int insertSelective(OrderClearanceSerial record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_clearance_serial
     *
     * @mbggenerated Thu Feb 09 14:03:33 CST 2017
     */
    OrderClearanceSerial selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_clearance_serial
     *
     * @mbggenerated Thu Feb 09 14:03:33 CST 2017
     */
    int updateByPrimaryKeySelective(OrderClearanceSerial record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_order_clearance_serial
     *
     * @mbggenerated Thu Feb 09 14:03:33 CST 2017
     */
    int updateByPrimaryKey(OrderClearanceSerial record);

    /**
     * 根据流水号获取核销流水
     * @param sn 流水号
     * @return
     */
    OrderClearanceSerial selectBySn(String sn);

    /**
     * 查询通道费账单
     * @param coreEpId 供应平台商ID
     * @param start 开始时间
     * @param end 结束时间
     * @param settled 是否已结
     * @return
     */
    List<Map> selectChannelBill(@Param("coreEpId") Integer coreEpId, @Param("start") Date start, @Param("end") Date end, @Param("settled") Boolean settled);

    /**
     * 查询供应商通道费账单
     * @param coreEpId 供应平台商ID
     * @param start 开始时间
     * @param end 结束时间
     * @param settled 是否已结
     * @return
     */
    List<Map> selectChannelBillForSupplier(@Param("coreEpId") Integer coreEpId, @Param("start") Date start, @Param("end") Date end, @Param("settled") Boolean settled);

    /**
     * 查询通道费账单详情
     * @param coreEpId 供应平台商ID
     * @param saleCoreEpId 销售平台商ID
     * @param selectMonth 月份
     * @return
     */
    List<Map> selectChannelBillDetail(@Param("coreEpId") Integer coreEpId,
                                      @Param("saleCoreEpId") Integer saleCoreEpId,
                                      @Param("selectMonth") Integer selectMonth,
                                      @Param("record_start") Integer recordStart,
                                      @Param("record_count") Integer recordCount);

    /**
     * 查询通道费账单详情总条数
     * @param coreEpId 供应平台商ID
     * @param saleCoreEpId 销售平台商ID
     * @param selectMonth 月份
     * @return
     */
    int selectChannelBillDetailCount(@Param("coreEpId") Integer coreEpId, @Param("saleCoreEpId") Integer saleCoreEpId, @Param("selectMonth") Integer selectMonth);

    /**
     * 按子订单查询核销总数
     * @param order_item_id
     * @return
     */
    int selectItemQuantityCount(@Param("order_item_id") Integer order_item_id);

    List<OrderClearanceSerial> selectItemClearanceSerial(@Param("order_item_id") Integer order_item_id);

    /**
     * 根据订单号查询
     * @param orderId
     * @return
     */
    List<OrderClearanceSerial> selectByOrder(@Param("orderId") Integer orderId);
}