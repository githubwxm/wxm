<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.all580.order.dao.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.all580.order.entity.OrderItem">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="BIGINT" property="number" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="pro_sub_number" jdbcType="BIGINT" property="proSubNumber" />
    <result column="pro_sub_id" jdbcType="INTEGER" property="proSubId" />
    <result column="pro_name" jdbcType="VARCHAR" property="proName" />
    <result column="pro_sub_name" jdbcType="VARCHAR" property="proSubName" />
    <result column="start" jdbcType="TIMESTAMP" property="start" />
    <result column="end" jdbcType="TIMESTAMP" property="end" />
    <result column="days" jdbcType="INTEGER" property="days" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="refund_quantity" jdbcType="INTEGER" property="refundQuantity" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="send_ma_log_rec_id" jdbcType="INTEGER" property="sendMaLogRecId" />
    <result column="send_ma_time" jdbcType="TIMESTAMP" property="sendMaTime" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="payment_flag" jdbcType="INTEGER" property="paymentFlag" />
    <result column="sale_amount" jdbcType="INTEGER" property="saleAmount" />
    <result column="ticket_type" jdbcType="INTEGER" property="ticketType" />
    <result column="supplier_ep_id" jdbcType="INTEGER" property="supplierEpId" />
    <result column="supplier_core_ep_id" jdbcType="INTEGER" property="supplierCoreEpId" />
    <result column="ep_ma_id" jdbcType="INTEGER" property="epMaId" />
    <result column="audit_user_id" jdbcType="INTEGER" property="auditUserId" />
    <result column="audit_user_name" jdbcType="VARCHAR" property="auditUserName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    `id`, `number`, `order_id`, `pro_sub_number`, `pro_sub_id`, `pro_name`, `pro_sub_name`, 
    `start`, `end`, `days`, `quantity`, `refund_quantity`, `status`, `send_ma_log_rec_id`, 
    `send_ma_time`, `group_id`, `payment_flag`, `sale_amount`, `ticket_type`, `supplier_ep_id`, 
    `supplier_core_ep_id`, `ep_ma_id`, `audit_user_id`, `audit_user_name`, `update_time`, 
    `audit_time`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_order_item
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    delete from t_order_item
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.all580.order.entity.OrderItem">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order_item (`number`, `order_id`, `pro_sub_number`, 
      `pro_sub_id`, `pro_name`, `pro_sub_name`, 
      `start`, `end`, `days`, 
      `quantity`, `refund_quantity`, `status`, 
      `send_ma_log_rec_id`, `send_ma_time`, `group_id`, 
      `payment_flag`, `sale_amount`, `ticket_type`, 
      `supplier_ep_id`, `supplier_core_ep_id`, `ep_ma_id`, 
      `audit_user_id`, `audit_user_name`, `update_time`, 
      `audit_time`)
    values (#{number,jdbcType=BIGINT}, #{orderId,jdbcType=INTEGER}, #{proSubNumber,jdbcType=BIGINT}, 
      #{proSubId,jdbcType=INTEGER}, #{proName,jdbcType=VARCHAR}, #{proSubName,jdbcType=VARCHAR}, 
      #{start,jdbcType=TIMESTAMP}, #{end,jdbcType=TIMESTAMP}, #{days,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{refundQuantity,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{sendMaLogRecId,jdbcType=INTEGER}, #{sendMaTime,jdbcType=TIMESTAMP}, #{groupId,jdbcType=INTEGER}, 
      #{paymentFlag,jdbcType=INTEGER}, #{saleAmount,jdbcType=INTEGER}, #{ticketType,jdbcType=INTEGER}, 
      #{supplierEpId,jdbcType=INTEGER}, #{supplierCoreEpId,jdbcType=INTEGER}, #{epMaId,jdbcType=INTEGER}, 
      #{auditUserId,jdbcType=INTEGER}, #{auditUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{auditTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.all580.order.entity.OrderItem">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        `number`,
      </if>
      <if test="orderId != null">
        `order_id`,
      </if>
      <if test="proSubNumber != null">
        `pro_sub_number`,
      </if>
      <if test="proSubId != null">
        `pro_sub_id`,
      </if>
      <if test="proName != null">
        `pro_name`,
      </if>
      <if test="proSubName != null">
        `pro_sub_name`,
      </if>
      <if test="start != null">
        `start`,
      </if>
      <if test="end != null">
        `end`,
      </if>
      <if test="days != null">
        `days`,
      </if>
      <if test="quantity != null">
        `quantity`,
      </if>
      <if test="refundQuantity != null">
        `refund_quantity`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="sendMaLogRecId != null">
        `send_ma_log_rec_id`,
      </if>
      <if test="sendMaTime != null">
        `send_ma_time`,
      </if>
      <if test="groupId != null">
        `group_id`,
      </if>
      <if test="paymentFlag != null">
        `payment_flag`,
      </if>
      <if test="saleAmount != null">
        `sale_amount`,
      </if>
      <if test="ticketType != null">
        `ticket_type`,
      </if>
      <if test="supplierEpId != null">
        `supplier_ep_id`,
      </if>
      <if test="supplierCoreEpId != null">
        `supplier_core_ep_id`,
      </if>
      <if test="epMaId != null">
        `ep_ma_id`,
      </if>
      <if test="auditUserId != null">
        `audit_user_id`,
      </if>
      <if test="auditUserName != null">
        `audit_user_name`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
      <if test="auditTime != null">
        `audit_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="proSubNumber != null">
        #{proSubNumber,jdbcType=BIGINT},
      </if>
      <if test="proSubId != null">
        #{proSubId,jdbcType=INTEGER},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proSubName != null">
        #{proSubName,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="days != null">
        #{days,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="refundQuantity != null">
        #{refundQuantity,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sendMaLogRecId != null">
        #{sendMaLogRecId,jdbcType=INTEGER},
      </if>
      <if test="sendMaTime != null">
        #{sendMaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="paymentFlag != null">
        #{paymentFlag,jdbcType=INTEGER},
      </if>
      <if test="saleAmount != null">
        #{saleAmount,jdbcType=INTEGER},
      </if>
      <if test="ticketType != null">
        #{ticketType,jdbcType=INTEGER},
      </if>
      <if test="supplierEpId != null">
        #{supplierEpId,jdbcType=INTEGER},
      </if>
      <if test="supplierCoreEpId != null">
        #{supplierCoreEpId,jdbcType=INTEGER},
      </if>
      <if test="epMaId != null">
        #{epMaId,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditUserName != null">
        #{auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.all580.order.entity.OrderItem">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    update t_order_item
    <set>
      <if test="number != null">
        `number` = #{number,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        `order_id` = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="proSubNumber != null">
        `pro_sub_number` = #{proSubNumber,jdbcType=BIGINT},
      </if>
      <if test="proSubId != null">
        `pro_sub_id` = #{proSubId,jdbcType=INTEGER},
      </if>
      <if test="proName != null">
        `pro_name` = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proSubName != null">
        `pro_sub_name` = #{proSubName,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        `start` = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null">
        `end` = #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="days != null">
        `days` = #{days,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        `quantity` = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="refundQuantity != null">
        `refund_quantity` = #{refundQuantity,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="sendMaLogRecId != null">
        `send_ma_log_rec_id` = #{sendMaLogRecId,jdbcType=INTEGER},
      </if>
      <if test="sendMaTime != null">
        `send_ma_time` = #{sendMaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null">
        `group_id` = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="paymentFlag != null">
        `payment_flag` = #{paymentFlag,jdbcType=INTEGER},
      </if>
      <if test="saleAmount != null">
        `sale_amount` = #{saleAmount,jdbcType=INTEGER},
      </if>
      <if test="ticketType != null">
        `ticket_type` = #{ticketType,jdbcType=INTEGER},
      </if>
      <if test="supplierEpId != null">
        `supplier_ep_id` = #{supplierEpId,jdbcType=INTEGER},
      </if>
      <if test="supplierCoreEpId != null">
        `supplier_core_ep_id` = #{supplierCoreEpId,jdbcType=INTEGER},
      </if>
      <if test="epMaId != null">
        `ep_ma_id` = #{epMaId,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        `audit_user_id` = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditUserName != null">
        `audit_user_name` = #{auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null">
        `audit_time` = #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.all580.order.entity.OrderItem">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 15:06:42 CST 2016.
    -->
    update t_order_item
    set `number` = #{number,jdbcType=BIGINT},
      `order_id` = #{orderId,jdbcType=INTEGER},
      `pro_sub_number` = #{proSubNumber,jdbcType=BIGINT},
      `pro_sub_id` = #{proSubId,jdbcType=INTEGER},
      `pro_name` = #{proName,jdbcType=VARCHAR},
      `pro_sub_name` = #{proSubName,jdbcType=VARCHAR},
      `start` = #{start,jdbcType=TIMESTAMP},
      `end` = #{end,jdbcType=TIMESTAMP},
      `days` = #{days,jdbcType=INTEGER},
      `quantity` = #{quantity,jdbcType=INTEGER},
      `refund_quantity` = #{refundQuantity,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `send_ma_log_rec_id` = #{sendMaLogRecId,jdbcType=INTEGER},
      `send_ma_time` = #{sendMaTime,jdbcType=TIMESTAMP},
      `group_id` = #{groupId,jdbcType=INTEGER},
      `payment_flag` = #{paymentFlag,jdbcType=INTEGER},
      `sale_amount` = #{saleAmount,jdbcType=INTEGER},
      `ticket_type` = #{ticketType,jdbcType=INTEGER},
      `supplier_ep_id` = #{supplierEpId,jdbcType=INTEGER},
      `supplier_core_ep_id` = #{supplierCoreEpId,jdbcType=INTEGER},
      `ep_ma_id` = #{epMaId,jdbcType=INTEGER},
      `audit_user_id` = #{auditUserId,jdbcType=INTEGER},
      `audit_user_name` = #{auditUserName,jdbcType=VARCHAR},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      `audit_time` = #{auditTime,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=INTEGER}
  </update>

    <select id="countBySidAndProductForDate" resultType="int">
        SELECT
        count(DISTINCT oi.id)
        FROM
        t_order_item oi
        LEFT JOIN t_order_item_detail toid ON toid.order_item_id = oi.id
        LEFT JOIN t_visitor v ON v.ref_id = toid.id
        WHERE
        oi.pro_sub_number = #{productSubCode}
        AND v.sid = #{sid}
        AND oi.start between #{start,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
    </select>

    <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM t_order_item toi
        WHERE toi.order_id = #{orderId,jdbcType=INTEGER}
    </select>

    <update id="setStatusByOrderId" parameterType="java.lang.Integer">
        UPDATE t_order_item
        SET `status` = #{status,jdbcType=INTEGER}
        WHERE `order_id` = #{orderId,jdbcType=INTEGER}
    </update>

    <select id="selectBySN" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT * FROM t_order_item
        WHERE `number` = #{sn,jdbcType=BIGINT}
    </select>

    <select id="getProductNamesByOrderId" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT `pro_sub_name`
        FROM t_order_item
        WHERE `order_id` = #{orderId,jdbcType=INTEGER}
    </select>

    <select id="getProductIdsByOrderId" parameterType="java.lang.Integer" resultType="java.lang.Long">
        SELECT `pro_sub_number`
        FROM t_order_item
        WHERE `order_id` = #{orderId,jdbcType=INTEGER}
    </select>

    <sql id="limit">
        <if test="record_start != null and record_count != null">
            limit #{record_start},#{record_count}
        </if>
        <if test="record_start != null and record_count == null">
            limit #{record_start}
        </if>
        <if test="record_start == null and record_count != null">
            limit 0,#{record_count}
        </if>
    </sql>

    <sql id="selectPlatformBySupplierCoreEpId_where">
        AND toi.supplier_core_ep_id = #{coreEpId}
        AND o.payee_ep_id != toi.supplier_core_ep_id
        <if test="startTime != null">
            AND o.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            AND o.create_time &lt; #{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="orderItemNumber != null">
            AND toi.number = #{orderItemNumber}
        </if>
        <if test="phone != null">
            AND ts.phone = #{phone}
        </if>
        <if test="orderStatus != null">
            AND o.`status` = #{orderStatus}
        </if>
        <if test="orderItemStatus != null">
            AND toi.`status` = #{orderItemStatus}
        </if>
    </sql>

    <select id="selectPlatformBySupplierCoreEpId" resultType="map">
        SELECT
            toi.number,
            toi.pro_name,
            toi.pro_sub_name,
            o.buy_ep_name,
            o.create_time,
            CASE IFNULL(toi.payment_flag,'')
            when 5011 then CONCAT('在线支付-',case IFNULL(o.payment_type,'') when 7111 then '余额' when 7112 then '支付宝' when 7113 then '微信' else '' end)
            when 5012 then '现场到付' else '' end as payDesc,
            toid.effective_date,
            toid.expiry_date,
            ts.`name`,
            ts.phone,
            (SELECT `data` FROM t_order_item_account WHERE order_item_id = toi.id AND ep_id = toi.supplier_core_ep_id) supplier_price,
            toi.quantity,
            toid.used_quantity,
            toid.refund_quantity,
            toid.expired_quantity,
            o.`status` order_status,
            topo.`name` order_status_name,
            toi.`status` order_item_status,
            topi.`name` order_item_status_name,
            toi.id,
            toi.pro_sub_id,
            toi.pro_sub_number
        FROM t_order_item toi
        LEFT JOIN t_order o ON o.id = toi.order_id
        LEFT JOIN t_shipping ts ON ts.order_id = o.id
        LEFT JOIN t_order_param topo ON topo.id = o.`status` AND topo.category = 'OrderStatus'
        LEFT JOIN t_order_param topi ON topi.id = toi.`status` AND topi.category = 'OrderItemStatus'
        JOIN (
            SELECT
                order_item_id,
                MIN(effective_date) effective_date,
                MAX(expiry_date) expiry_date,
                SUM(used_quantity) used_quantity,
                SUM(refund_quantity) refund_quantity,
                SUM( if(expiry_date &lt;= SYSDATE(),quantity - used_quantity - refund_quantity,0 ) ) expired_quantity
            FROM t_order_item_detail GROUP BY order_item_id
        ) toid on toid.order_item_id = toi.id
        WHERE
        1=1
        <include refid="selectPlatformBySupplierCoreEpId_where" />
        <include refid="limit" />
    </select>

    <select id="selectPlatformBySupplierCoreEpIdCount" resultType="int">
        SELECT
            count(*)
        FROM t_order_item toi
        LEFT JOIN t_order o ON o.id = toi.order_id
        LEFT JOIN t_shipping ts ON ts.order_id = o.id
        WHERE
        1=1
        <include refid="selectPlatformBySupplierCoreEpId_where" />
    </select>

    <sql id="selectBySupplierPlatform_where">
        AND toi.supplier_core_ep_id = #{coreEpId}
        <if test="saleCoreEpId != null">
            AND o.payee_ep_id = #{saleCoreEpId}
        </if>
        <if test="startTime != null">
            <choose>
                <when test="dateType != null and dateType == 361">
                    <![CDATA[and TIMESTAMP(toi.`start`) >= #{startTime}	]]>
                </when>
                <when test="dateType != null and dateType == 362">
                    <![CDATA[and TIMESTAMP(tocs.use_time) >= #{startTime}	]]>
                </when>
                <otherwise>
                    <![CDATA[and TIMESTAMP(o.create_time) >= #{startTime}	]]>
                </otherwise>
            </choose>
        </if>
        <if test="endTime != null">
            <choose>
                <when test="dateType != null and dateType == 361">
                    <![CDATA[and TIMESTAMP(toi.`start`) < #{endTime}	]]>
                </when>
                <when test="dateType != null and dateType == 362">
                    <![CDATA[and TIMESTAMP(tocs.use_time) < #{endTime}]]>
                </when>
                <otherwise>
                    <![CDATA[and TIMESTAMP(o.create_time) < #{endTime}]]>
                </otherwise>
            </choose>
        </if>
        <if test="orderItemNumber != null">
            AND toi.number = #{orderItemNumber}
        </if>
        <if test="phone != null">
            AND ts.phone = #{phone}
        </if>
        <if test="orderStatus != null">
            AND o.`status` = #{orderStatus}
        </if>
        <if test="orderItemStatus != null">
            AND toi.`status` = #{orderItemStatus}
        </if>
        <if test="productSubNumber != null">
            AND toi.pro_sub_number = #{productSubNumber}
        </if>
        <if test="self != null and self == true">
            AND toi.supplier_ep_id = #{coreEpId}
        </if>
        <if test="self != null and self == false">
            AND toi.supplier_ep_id != #{coreEpId}
        </if>
    </sql>

    <select id="selectBySupplierPlatform" resultType="map">
        SELECT
            o.id order_id,
            o.number order_number,
            toi.id order_item_id,
            toi.number order_item_number,
            toi.pro_name,
            toi.pro_sub_id,
            toi.pro_sub_number,
            toi.pro_sub_name,
            ts.`name`,
            ts.phone,
            ts.sid,
            o.create_time,
            toi.`start` booking_date,
            tocs.use_time,
            toi.quantity,
            toid.used_quantity,
            toid.refund_quantity,
            toid.expired_quantity,
            toia.`data`,
            o.buy_ep_id,
            o.buy_ep_name,
            o.buy_operator_id,
            o.buy_operator_name,
            o.`status` order_status,
            topo.`name` order_status_name,
            toi.`status` order_item_status,
            topi.`name` order_item_status_name,
            IFNULL(tra.profit, 0) refund_fee,
            '一票多刷' send_ma_type,
            null outer_number
        FROM t_order_item toi
        LEFT JOIN t_order o ON o.id = toi.order_id
        LEFT JOIN t_shipping ts ON ts.order_id = o.id
        LEFT JOIN t_order_param topo ON topo.id = o.`status` AND topo.category = 'OrderStatus'
        LEFT JOIN t_order_param topi ON topi.id = toi.`status` AND topi.category = 'OrderItemStatus'
        LEFT JOIN (
            SELECT
                order_item_id,
                MAX(clearance_time) use_time
            FROM t_order_clearance_serial
            GROUP BY order_item_id
        ) tocs ON tocs.order_item_id = toi.id
        LEFT JOIN t_order_item_account toia ON toia.order_item_id = toi.id AND toia.ep_id = toi.supplier_core_ep_id AND `data` is not null
        LEFT JOIN (
            SELECT SUM(tra.profit) profit, tra.`data`, tro.order_item_id, tra.ep_id
            FROM t_refund_account tra
            LEFT JOIN t_refund_order tro ON tro.id = tra.refund_order_id
            GROUP BY tro.order_item_id, tra.ep_id
        ) tra ON tra.order_item_id = toi.id AND tra.ep_id = toi.supplier_core_ep_id
        JOIN (
            SELECT
                order_item_id,
                SUM(used_quantity) used_quantity,
                SUM(refund_quantity) refund_quantity,
                SUM( if(expiry_date &lt;= SYSDATE(),quantity - used_quantity - refund_quantity,0 ) ) expired_quantity
            FROM t_order_item_detail GROUP BY order_item_id
        ) toid on toid.order_item_id = toi.id
        WHERE
        1=1
        <include refid="selectBySupplierPlatform_where" />
        <include refid="limit" />
    </select>

    <select id="selectBySupplierPlatformCount" resultType="int">
        SELECT
            count(*)
        FROM t_order_item toi
        LEFT JOIN t_order o ON o.id = toi.order_id
        LEFT JOIN t_shipping ts ON ts.order_id = o.id
        LEFT JOIN (
            SELECT
                order_item_id,
                MAX(clearance_time) use_time
            FROM t_order_clearance_serial
            GROUP BY order_item_id
        ) tocs ON tocs.order_item_id = toi.id
        WHERE
        1=1
        <include refid="selectBySupplierPlatform_where" />
    </select>
</mapper>