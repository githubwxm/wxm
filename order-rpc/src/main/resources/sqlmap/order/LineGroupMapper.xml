<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.all580.order.dao.LineGroupMapper">
  <resultMap id="BaseResultMap" type="com.all580.order.entity.LineGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="team_prefix" jdbcType="VARCHAR" property="team_prefix" />
    <result column="team_suffix" jdbcType="VARCHAR" property="team_suffix" />
    <result column="guide_name" jdbcType="VARCHAR" property="guide_name" />
    <result column="guide_phone" jdbcType="VARCHAR" property="guide_phone" />
    <result column="guide_sid" jdbcType="VARCHAR" property="guide_sid" />
    <result column="guide_card" jdbcType="VARCHAR" property="guide_card" />
    <result column="place_of_departure" jdbcType="VARCHAR" property="place_of_departure" />
    <result column="destination" jdbcType="VARCHAR" property="destination" />
    <result column="days" jdbcType="INTEGER" property="days" />
    <result column="nights" jdbcType="INTEGER" property="nights" />
    <result column="booking_date" jdbcType="VARCHAR" property="booking_date" />
    <result column="core_ep_id" jdbcType="INTEGER" property="core_ep_id" />
    <result column="ep_id" jdbcType="INTEGER" property="ep_id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    `id`, `number`, `team_prefix`, `team_suffix`, `guide_name`, `guide_phone`, `guide_sid`, 
    `guide_card`, `place_of_departure`, `destination`, `days`, `nights`, `booking_date`, 
    `core_ep_id`, `ep_id`, `status`, `create_time`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_line_group
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    delete from t_line_group
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.all580.order.entity.LineGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_line_group (`number`, `team_prefix`, `team_suffix`, 
      `guide_name`, `guide_phone`, `guide_sid`, 
      `guide_card`, `place_of_departure`, `destination`, 
      `days`, `nights`, `booking_date`, 
      `core_ep_id`, `ep_id`, `status`, 
      `create_time`)
    values (#{number,jdbcType=VARCHAR}, #{team_prefix,jdbcType=VARCHAR}, #{team_suffix,jdbcType=VARCHAR}, 
      #{guide_name,jdbcType=VARCHAR}, #{guide_phone,jdbcType=VARCHAR}, #{guide_sid,jdbcType=VARCHAR}, 
      #{guide_card,jdbcType=VARCHAR}, #{place_of_departure,jdbcType=VARCHAR}, #{destination,jdbcType=VARCHAR}, 
      #{days,jdbcType=INTEGER}, #{nights,jdbcType=INTEGER}, #{booking_date,jdbcType=VARCHAR}, 
      #{core_ep_id,jdbcType=INTEGER}, #{ep_id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.all580.order.entity.LineGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_line_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        `number`,
      </if>
      <if test="team_prefix != null">
        `team_prefix`,
      </if>
      <if test="team_suffix != null">
        `team_suffix`,
      </if>
      <if test="guide_name != null">
        `guide_name`,
      </if>
      <if test="guide_phone != null">
        `guide_phone`,
      </if>
      <if test="guide_sid != null">
        `guide_sid`,
      </if>
      <if test="guide_card != null">
        `guide_card`,
      </if>
      <if test="place_of_departure != null">
        `place_of_departure`,
      </if>
      <if test="destination != null">
        `destination`,
      </if>
      <if test="days != null">
        `days`,
      </if>
      <if test="nights != null">
        `nights`,
      </if>
      <if test="booking_date != null">
        `booking_date`,
      </if>
      <if test="core_ep_id != null">
        `core_ep_id`,
      </if>
      <if test="ep_id != null">
        `ep_id`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="create_time != null">
        `create_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="team_prefix != null">
        #{team_prefix,jdbcType=VARCHAR},
      </if>
      <if test="team_suffix != null">
        #{team_suffix,jdbcType=VARCHAR},
      </if>
      <if test="guide_name != null">
        #{guide_name,jdbcType=VARCHAR},
      </if>
      <if test="guide_phone != null">
        #{guide_phone,jdbcType=VARCHAR},
      </if>
      <if test="guide_sid != null">
        #{guide_sid,jdbcType=VARCHAR},
      </if>
      <if test="guide_card != null">
        #{guide_card,jdbcType=VARCHAR},
      </if>
      <if test="place_of_departure != null">
        #{place_of_departure,jdbcType=VARCHAR},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="days != null">
        #{days,jdbcType=INTEGER},
      </if>
      <if test="nights != null">
        #{nights,jdbcType=INTEGER},
      </if>
      <if test="booking_date != null">
        #{booking_date,jdbcType=VARCHAR},
      </if>
      <if test="core_ep_id != null">
        #{core_ep_id,jdbcType=INTEGER},
      </if>
      <if test="ep_id != null">
        #{ep_id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.all580.order.entity.LineGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    update t_line_group
    <set>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="team_prefix != null">
        `team_prefix` = #{team_prefix,jdbcType=VARCHAR},
      </if>
      <if test="team_suffix != null">
        `team_suffix` = #{team_suffix,jdbcType=VARCHAR},
      </if>
      <if test="guide_name != null">
        `guide_name` = #{guide_name,jdbcType=VARCHAR},
      </if>
      <if test="guide_phone != null">
        `guide_phone` = #{guide_phone,jdbcType=VARCHAR},
      </if>
      <if test="guide_sid != null">
        `guide_sid` = #{guide_sid,jdbcType=VARCHAR},
      </if>
      <if test="guide_card != null">
        `guide_card` = #{guide_card,jdbcType=VARCHAR},
      </if>
      <if test="place_of_departure != null">
        `place_of_departure` = #{place_of_departure,jdbcType=VARCHAR},
      </if>
      <if test="destination != null">
        `destination` = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="days != null">
        `days` = #{days,jdbcType=INTEGER},
      </if>
      <if test="nights != null">
        `nights` = #{nights,jdbcType=INTEGER},
      </if>
      <if test="booking_date != null">
        `booking_date` = #{booking_date,jdbcType=VARCHAR},
      </if>
      <if test="core_ep_id != null">
        `core_ep_id` = #{core_ep_id,jdbcType=INTEGER},
      </if>
      <if test="ep_id != null">
        `ep_id` = #{ep_id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        `create_time` = #{create_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.all580.order.entity.LineGroup">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 23 14:51:16 CST 2017.
    -->
    update t_line_group
    set `number` = #{number,jdbcType=VARCHAR},
      `team_prefix` = #{team_prefix,jdbcType=VARCHAR},
      `team_suffix` = #{team_suffix,jdbcType=VARCHAR},
      `guide_name` = #{guide_name,jdbcType=VARCHAR},
      `guide_phone` = #{guide_phone,jdbcType=VARCHAR},
      `guide_sid` = #{guide_sid,jdbcType=VARCHAR},
      `guide_card` = #{guide_card,jdbcType=VARCHAR},
      `place_of_departure` = #{place_of_departure,jdbcType=VARCHAR},
      `destination` = #{destination,jdbcType=VARCHAR},
      `days` = #{days,jdbcType=INTEGER},
      `nights` = #{nights,jdbcType=INTEGER},
      `booking_date` = #{booking_date,jdbcType=VARCHAR},
      `core_ep_id` = #{core_ep_id,jdbcType=INTEGER},
      `ep_id` = #{ep_id,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `create_time` = #{create_time,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByNumber" resultMap="BaseResultMap">
        select * from t_line_group
        WHERE `number` = #{number}
        and ep_id = #{epId}
        and core_ep_id = #{coreEpId}
    </select>

  <sql id="listGroup_where">
      <if test='product_name != null and product_name != ""'>
        AND INSTR(t.product_name,#{product_name})>0
      </if>
      <if test='number != null and number != ""'>
        AND INSTR(t.number,#{number})>0
      </if>
      <!--<if test="booking_start_date != null">
        AND CAST(t.`booking_date` AS DATE) >= CAST(#{booking_start_date} AS DATE)
      </if>
      <if test="booking_end_date != null">
        AND CAST(t.`booking_date` AS DATE) <= CAST(#{booking_end_date} AS DATE)
      </if>-->
      <if test='booking_start_date != null and booking_start_date != "" and booking_end_date != null and booking_end_date != ""'>
        AND CAST(t.booking_date AS DATE) BETWEEN CAST(#{booking_start_date} AS DATE) AND CAST(#{booking_end_date} AS DATE)
      </if>
      <if test='status != null and status != ""'>
        AND t.status = #{status}
      </if>
  </sql>
  
  <select id="countLineGroup" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT
    COUNT(DISTINCT (t.id))
    FROM
    (SELECT
    t1.id,
    t2.pro_sub_name AS product_name,
    t1.number,
    t1.booking_date,
    t1.status
    FROM
    t_line_group t1
    LEFT JOIN t_order_item t2
    ON t1.id = t2.group_id
    WHERE t1.ep_id = #{ep_id}) t
    WHERE 1 = 1
    <include refid="listGroup_where"></include>
  </select>

  <sql id="limit">
    <if test="record_start != null and record_count != null">
      limit #{record_start,jdbcType=INTEGER},#{record_count,jdbcType=INTEGER}
    </if>
    <if test="record_start != null and record_count == null">
      limit #{record_start,jdbcType=INTEGER}
    </if>
    <if test="record_start == null and record_count != null">
      limit 0,#{record_count,jdbcType=INTEGER}
    </if>
  </sql>

  <select id="listGroup" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT
        DISTINCT
        *
      FROM
        (SELECT
          g.`id`,
          g.`number`,
          toi.pro_sub_name AS product_name,
          g.`booking_date`,
          v.booking_visitor_count,
          r.refund_visitor_count,
          g.`place_of_departure`,
          CONCAT(g.`days`, '天', g.`nights`, '晚') AS days_of_trip,
          g.`guide_name`,
          g.`guide_phone`,
          CASE
            IFNULL(g.`status`, 0)
            WHEN 390
            THEN '未出团'
            WHEN 391
            THEN '已出团'
            WHEN 392
            THEN '已完成'
            ELSE ''
          END AS STATUS
        FROM
          t_line_group g
          LEFT JOIN t_order_item toi
            ON g.id = toi.group_id
          LEFT JOIN
            (SELECT
              COUNT(1) booking_visitor_count,
              t1.group_id
            FROM
              t_visitor t1
            GROUP BY t1.group_id) v
            ON g.id = v.group_id
          LEFT JOIN
            (SELECT
              COUNT(1) refund_visitor_count,
              t2.group_id
            FROM
              t_refund_visitor t1
              LEFT JOIN t_visitor t2
                ON t1.`visitor_id` = t2.`id`
            GROUP BY t2.group_id) r
            ON g.id = r.group_id
      WHERE g.ep_id = #{ep_id}) t WHERE 1=1
      <include refid="listGroup_where"></include>
      ORDER BY t.booking_date DESC
      <include refid="limit"></include>
  </select>

  <select id="getLineGroupDetailByNumber" resultType="java.util.Map">
      SELECT
        *
      FROM
        (SELECT
          g.id,
          g.number,
          toi.pro_sub_name AS product_name,
          g.booking_date,
          v.booking_visitor_count,
          r.refund_visitor_count,
          g.place_of_departure,
          CONCAT(g.days, '天', g.nights, '晚') AS days_of_trip,
          g.guide_name,
          g.guide_phone,
          g.guide_sid,
          g.guide_card,
          CASE
            IFNULL(g.status, 0)
            WHEN 390
            THEN '未出团'
            WHEN 391
            THEN '已出团'
            WHEN 392
            THEN '已完成'
            ELSE ''
          END AS STATUS,
          o.confirmed_orders_count,
          o.unconfirmed_orders_count,
          o.paid_orders_count,
          o.unpaid_orders_count
        FROM
          t_line_group g
          LEFT JOIN t_order_item toi
            ON g.id = toi.group_id
          LEFT JOIN
            (SELECT
              COUNT(1) booking_visitor_count,
              t1.group_id
            FROM
              t_visitor t1
            GROUP BY t1.group_id) v
            ON g.id = v.group_id
          LEFT JOIN
            (SELECT
              COUNT(1) refund_visitor_count,
              t2.group_id
            FROM
              t_refund_visitor t1
              LEFT JOIN t_visitor t2
                ON t1.visitor_id = t2.id
            GROUP BY t2.group_id) r
            ON g.id = r.group_id
          LEFT JOIN
            (SELECT
              t4.id,
              SUM(t4.confirmed_orders_count) AS confirmed_orders_count,
              SUM(t4.unconfirmed_orders_count) AS unconfirmed_orders_count,
              SUM(t4.paid_orders_count) AS paid_orders_count,
              SUM(t4.unpaid_orders_count) AS unpaid_orders_count
            FROM
              (
                (SELECT
                  t1.id,
                  COUNT(1) AS confirmed_orders_count,
                  0 AS unconfirmed_orders_count,
                  0 AS paid_orders_count,
                  0 AS unpaid_orders_count
                FROM
                  t_line_group t1,
                  t_order_item t2,
                  t_order t3
                WHERE t1.id = t2.group_id
                  AND t2.order_id = t3.id
                  AND t3.status IN (311, 312, 313, 314, 315)
                GROUP BY t1.id,
                  t3.status)
                UNION
                (SELECT
                  t1.id,
                  0 AS confirmed_orders_count,
                  COUNT(1) AS unconfirmed_orders_count,
                  0 AS paid_orders_count,
                  0 AS unpaid_orders_count
                FROM
                  t_line_group t1,
                  t_order_item t2,
                  t_order t3
                WHERE t1.id = t2.group_id
                  AND t2.order_id = t3.id
                  AND t3.status = 310
                GROUP BY t1.id,
                  t3.status)
                UNION
                (SELECT
                  t1.id,
                  0 AS confirmed_orders_count,
                  0 AS unconfirmed_orders_count,
                  COUNT(1) AS paid_orders_count,
                  0 AS unpaid_orders_count
                FROM
                  t_line_group t1,
                  t_order_item t2,
                  t_order t3
                WHERE t1.id = t2.group_id
                  AND t2.order_id = t3.id
                  AND t3.status IN (314, 315)
                GROUP BY t1.id,
                  t3.status)
                UNION
                (SELECT
                  t1.id,
                  0 AS confirmed_orders_count,
                  0 AS unconfirmed_orders_count,
                  0 AS paid_orders_count,
                  COUNT(1) AS unpaid_orders_count
                FROM
                  t_line_group t1,
                  t_order_item t2,
                  t_order t3
                WHERE t1.id = t2.group_id
                  AND t2.order_id = t3.id
                  AND t1.ep_id = #{ep_id}
                  AND t3.status IN (311, 312, 313)
                GROUP BY t1.id,
                  t3.status)
              ) t4
            GROUP BY t4.id) o
            ON o.id = g.id
            WHERE g.ep_id = #{ep_id}) t WHERE t.number = #{number} limit 1
  </select>

  <select id="countLineGroupVisitorByGroupNumber" resultType="int">
    SELECT
      COUNT(1)
    FROM
      t_visitor t1,
      t_line_group t2,
      t_order_item t3
    WHERE t1.group_id = t2.id
      AND t1.ref_id = t3.id
      AND t2.number = #{groupNumber}
      AND t2.ep_id = #{ep_id}
  </select>

  <select id="getLineOrderVisitorsByNumber" resultType="java.util.Map">
    SELECT
      t1.id,
      t1.name,
      CASE IFNULL(t1.sex,'')
      WHEN '3000' THEN '未知性别'
      WHEN '3001' THEN '男'
      WHEN '3002' THEN '女'
      ELSE '' END AS sex,
      t1.phone,
      t1.sid,
      CASE
        IFNULL(
          (SELECT
            1
          FROM
            t_refund_visitor t4
          WHERE t4.visitor_id = t1.id
            AND t4.order_item_id = t3.id),
          ''
        )
        WHEN '1'
        THEN '已退'
        ELSE ''
      END AS STATUS,
      t3.number AS order_number
    FROM
      t_visitor t1,
      t_line_group t2,
      t_order_item t3
    WHERE t1.group_id = t2.id
      AND t1.ref_id = t3.id
      AND t2.number = #{number}
      AND t2.ep_id = #{ep_id}
      <include refid="limit"></include>
  </select>

  <select id="getLineOrdersByNumbers" resultType="java.util.Map">
    SELECT
      t1.id,
      t1.number,
      t1.audit_time,
      t1.audit_user_name,
      t2.create_time,
      t3.travel_name,
      CASE IFNULL(t2.status,'')
      WHEN 310 THEN '待审核'
      WHEN 311 THEN '待支付'
      WHEN 312 THEN '支付中'
      WHEN 313 THEN '支付失败'
      WHEN 314 THEN '已支付,处理中'
      WHEN 315 THEN '已支付,交易成功'
      WHEN 316 THEN '已取消'
      ELSE '' END  AS order_status,
      CASE IFNULL(t1.status,'')
      WHEN 320 THEN '待审核'
      WHEN 321 THEN '审核通过'
      WHEN 322 THEN '未出票'
      WHEN 323 THEN '出票失败'
      WHEN 324 THEN '出票中'
      WHEN 325 THEN '已出票'
      WHEN 326 THEN '已取消'
      WHEN 327 THEN '修改中'
      WHEN 328 THEN '已修改'
      WHEN 329 THEN '修改失败'
      ELSE '' END  AS  sub_order_status,
      t2.remark
    FROM
      t_order_item t1,
      t_order t2,
      t_line_group t3
    WHERE t1.order_id = t2.id
      AND t1.group_id = t3.id
      AND t3.number = #{groupNumber}
      AND t3.ep_id = #{ep_id}
      AND t1.number IN
      <foreach collection="orderNumbers" item="orderNumber" open="("  close=")" separator=",">
        #{orderNumber}
      </foreach>
    ORDER BY t1.audit_time DESC
  </select>
  <update id="updateByNumberSelective" parameterType="com.all580.order.entity.LineGroup">

  </update>
</mapper>