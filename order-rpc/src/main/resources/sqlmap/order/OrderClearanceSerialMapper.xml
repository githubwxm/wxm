<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.all580.order.dao.OrderClearanceSerialMapper">
  <resultMap id="BaseResultMap" type="com.all580.order.entity.OrderClearanceSerial">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="serial_no" jdbcType="VARCHAR" property="serial_no" />
    <result column="order_item_id" jdbcType="INTEGER" property="order_item_id" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="day" jdbcType="TIMESTAMP" property="day" />
    <result column="supplier_money" jdbcType="INTEGER" property="supplier_money" />
    <result column="channel_fee" jdbcType="INTEGER" property="channel_fee" />
    <result column="clearance_time" jdbcType="TIMESTAMP" property="clearance_time" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="split" jdbcType="BIT" property="split" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    `id`, `serial_no`, `order_item_id`, `quantity`, `day`, `supplier_money`, `channel_fee`,
    `clearance_time`, `create_time`, `update_time`, `split`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    select
    <include refid="Base_Column_List" />
    from t_order_clearance_serial
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    delete from t_order_clearance_serial
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.all580.order.entity.OrderClearanceSerial">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order_clearance_serial (`serial_no`, `order_item_id`, `quantity`,
      `day`, `supplier_money`, `channel_fee`,
      `clearance_time`, `create_time`, `update_time`,
      `split`)
    values (#{serial_no,jdbcType=VARCHAR}, #{order_item_id,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER},
      #{day,jdbcType=TIMESTAMP}, #{supplier_money,jdbcType=INTEGER}, #{channel_fee,jdbcType=INTEGER},
      #{clearance_time,jdbcType=TIMESTAMP}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP},
      #{split,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.all580.order.entity.OrderClearanceSerial">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_order_clearance_serial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serial_no != null">
        `serial_no`,
      </if>
      <if test="order_item_id != null">
        `order_item_id`,
      </if>
      <if test="quantity != null">
        `quantity`,
      </if>
      <if test="day != null">
        `day`,
      </if>
      <if test="supplier_money != null">
        `supplier_money`,
      </if>
      <if test="channel_fee != null">
        `channel_fee`,
      </if>
      <if test="clearance_time != null">
        `clearance_time`,
      </if>
      <if test="create_time != null">
        `create_time`,
      </if>
      <if test="update_time != null">
        `update_time`,
      </if>
      <if test="split != null">
        `split`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serial_no != null">
        #{serial_no,jdbcType=VARCHAR},
      </if>
      <if test="order_item_id != null">
        #{order_item_id,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        #{day,jdbcType=TIMESTAMP},
      </if>
      <if test="supplier_money != null">
        #{supplier_money,jdbcType=INTEGER},
      </if>
      <if test="channel_fee != null">
        #{channel_fee,jdbcType=INTEGER},
      </if>
      <if test="clearance_time != null">
        #{clearance_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="split != null">
        #{split,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.all580.order.entity.OrderClearanceSerial">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    update t_order_clearance_serial
    <set>
      <if test="serial_no != null">
        `serial_no` = #{serial_no,jdbcType=VARCHAR},
      </if>
      <if test="order_item_id != null">
        `order_item_id` = #{order_item_id,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        `quantity` = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="day != null">
        `day` = #{day,jdbcType=TIMESTAMP},
      </if>
      <if test="supplier_money != null">
        `supplier_money` = #{supplier_money,jdbcType=INTEGER},
      </if>
      <if test="channel_fee != null">
        `channel_fee` = #{channel_fee,jdbcType=INTEGER},
      </if>
      <if test="clearance_time != null">
        `clearance_time` = #{clearance_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null">
        `create_time` = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        `update_time` = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="split != null">
        `split` = #{split,jdbcType=BIT},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.all580.order.entity.OrderClearanceSerial">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 09 14:03:33 CST 2017.
    -->
    update t_order_clearance_serial
    set `serial_no` = #{serial_no,jdbcType=VARCHAR},
      `order_item_id` = #{order_item_id,jdbcType=INTEGER},
      `quantity` = #{quantity,jdbcType=INTEGER},
      `day` = #{day,jdbcType=TIMESTAMP},
      `supplier_money` = #{supplier_money,jdbcType=INTEGER},
      `channel_fee` = #{channel_fee,jdbcType=INTEGER},
      `clearance_time` = #{clearance_time,jdbcType=TIMESTAMP},
      `create_time` = #{create_time,jdbcType=TIMESTAMP},
      `update_time` = #{update_time,jdbcType=TIMESTAMP},
      `split` = #{split,jdbcType=BIT}
    where `id` = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectBySn" resultMap="BaseResultMap">
        SELECT * FROM t_order_clearance_serial
        WHERE `serial_no` = #{sn,jdbcType=VARCHAR}
    </select>

    <select id="selectChannelBill" resultType="map">
      SELECT
          a.clearance_month,
          SUM(a.total_money) bill_money,
          TRUNCATE(SUM(a.total_fee), 0) fee,
          a.supplier_core_ep_id,
          a.sale_core_ep_id,
          IFNULL(tcb.settled,0) settled
      FROM
          (
              SELECT
                  SUM(tocs.supplier_money) total_money,
                  SUM(
                      tocs.supplier_money * (
                          IFNULL(tocs.channel_fee, 0) / 10000
                      )
                  ) total_fee,
                  DATE_FORMAT(
                      tocs.clearance_time,
                      '%Y%m'
                  ) AS clearance_month,
                  toi.supplier_core_ep_id,
                  o.payee_ep_id sale_core_ep_id
              FROM
                  t_order_clearance_serial tocs
                  LEFT JOIN t_order_item toi ON toi.id = tocs.order_item_id
                  LEFT JOIN t_order o ON o.id = toi.order_id
              WHERE
                  1 = 1
                  AND toi.supplier_core_ep_id != o.payee_ep_id
                  <if test="coreEpId != null">
                    AND toi.supplier_core_ep_id = #{coreEpId}
                  </if>
                  <if test="start != null">
                    AND tocs.clearance_time &gt;= #{start}
                  </if>
                  <if test="end != null">
                    AND tocs.clearance_time &lt;= #{end}
                  </if>
              GROUP BY
                  toi.supplier_core_ep_id,
                  sale_core_ep_id,
                  clearance_month
              UNION
                  SELECT
                      - SUM(tcws.supplier_money) total_money,
                      - SUM(
                          tcws.supplier_money * (
                              IFNULL(tcws.channel_fee, 0) / 10000
                          )
                      ) total_fee,
                      DATE_FORMAT(
                          tcws.clearance_washed_time,
                          '%Y%m'
                      ) AS clearance_month,
                      toi.supplier_core_ep_id,
                      o.payee_ep_id sale_core_ep_id
                  FROM
                      t_clearance_washed_serial tcws
                      LEFT JOIN t_order_clearance_serial tocs ON tocs.serial_no = tcws.clearance_serial_no
                      LEFT JOIN t_order_item toi ON toi.id = tocs.order_item_id
                      LEFT JOIN t_order o ON o.id = toi.order_id
                  WHERE
                      1 = 1
                      AND toi.supplier_core_ep_id != o.payee_ep_id
                      <if test="coreEpId != null">
                        AND toi.supplier_core_ep_id = #{coreEpId}
                      </if>
                      <if test="start != null">
                        AND tcws.clearance_washed_time &gt;= #{start}
                      </if>
                      <if test="end != null">
                        AND tcws.clearance_washed_time &lt;= #{end}
                      </if>
                  GROUP BY
                      toi.supplier_core_ep_id,
                      sale_core_ep_id,
                      clearance_month
              UNION
                  SELECT
                      SUM(tra.profit) total_money,
                      SUM(
                          tra.profit * (
                              IFNULL(tro.channel_fee, 0) / 10000
                          )
                      ) total_fee,
                      DATE_FORMAT(
                          tro.refund_money_time,
                          '%Y%m'
                      ) AS clearance_month,
                      toi.supplier_core_ep_id,
                      o.payee_ep_id sale_core_ep_id
                  FROM
                      t_refund_account tra
                  LEFT JOIN t_refund_order tro ON tro.id = tra.refund_order_id
                  LEFT JOIN t_order_item toi ON toi.id = tro.order_item_id
                  LEFT JOIN t_order o ON o.id = toi.order_id
                  WHERE
                      1 = 1
                      AND tra.`status` = 331
                      AND tra.profit &gt; 0
                      AND toi.supplier_core_ep_id != o.payee_ep_id
                      AND toi.supplier_core_ep_id = tra.core_ep_id
                      <if test="coreEpId != null">
                          AND toi.supplier_core_ep_id = #{coreEpId}
                      </if>
                      <if test="start != null">
                          AND tro.refund_money_time &gt;= #{start}
                      </if>
                      <if test="end != null">
                          AND tro.refund_money_time &lt;= #{end}
                      </if>
                  GROUP BY
                      toi.supplier_core_ep_id,
                      sale_core_ep_id,
                      clearance_month
          ) a
      LEFT JOIN t_supplier_channel_bill tcb ON tcb.supplier_core_ep_id = a.supplier_core_ep_id AND tcb.bill_month = a.clearance_month
      WHERE
          1 = 1
          <if test="settled != null and settled">
              AND tcb.settled = 1
          </if>
          <if test="settled != null and !settled">
              AND tcb.settled is null
          </if>
      GROUP BY
          a.supplier_core_ep_id,
          a.sale_core_ep_id,
          a.clearance_month
    </select>

    <select id="selectChannelBillForSupplier" resultType="map">
        SELECT
            a.clearance_month,
            SUM(a.total_money) bill_money,
            TRUNCATE(SUM(a.total_fee), 0) fee,
            a.supplier_core_ep_id,
            IFNULL(tcb.settled, 0) settled
        FROM
            (
                SELECT
                    SUM(tocs.supplier_money) total_money,
                    SUM(
                        tocs.supplier_money * (
                            IFNULL(tocs.channel_fee, 0) / 10000
                        )
                    ) total_fee,
                    DATE_FORMAT(tocs.clearance_time, '%Y%m') AS clearance_month,
                    toi.supplier_core_ep_id
                FROM
                    t_order_clearance_serial tocs
                LEFT JOIN t_order_item toi ON toi.id = tocs.order_item_id
                LEFT JOIN t_order o ON o.id = toi.order_id
                WHERE
                    1 = 1
                    AND toi.supplier_core_ep_id != o.payee_ep_id
                    <if test="coreEpId != null">
                        AND toi.supplier_core_ep_id = #{coreEpId}
                    </if>
                    <if test="start != null">
                        AND tocs.clearance_time &gt;= #{start}
                    </if>
                    <if test="end != null">
                        AND tocs.clearance_time &lt;= #{end}
                    </if>
                GROUP BY
                    toi.supplier_core_ep_id,
                    clearance_month
                UNION
                    SELECT
                        - SUM(tcws.supplier_money) total_money,
                        - SUM(
                            tcws.supplier_money * (
                                IFNULL(tcws.channel_fee, 0) / 10000
                            )
                        ) total_fee,
                        DATE_FORMAT(
                            tcws.clearance_washed_time,
                            '%Y%m'
                        ) AS clearance_month,
                        toi.supplier_core_ep_id
                    FROM
                        t_clearance_washed_serial tcws
                    LEFT JOIN t_order_clearance_serial tocs ON tocs.serial_no = tcws.clearance_serial_no
                    LEFT JOIN t_order_item toi ON toi.id = tocs.order_item_id
                    LEFT JOIN t_order o ON o.id = toi.order_id
                    WHERE
                        1 = 1
                        AND toi.supplier_core_ep_id != o.payee_ep_id
                        <if test="coreEpId != null">
                            AND toi.supplier_core_ep_id = #{coreEpId}
                        </if>
                        <if test="start != null">
                            AND tcws.clearance_washed_time &gt;= #{start}
                        </if>
                        <if test="end != null">
                            AND tcws.clearance_washed_time &lt;= #{end}
                        </if>
                    GROUP BY
                        toi.supplier_core_ep_id,
                        clearance_month
                UNION
                    SELECT
                        SUM(tra.profit) total_money,
                        SUM(
                            tra.profit * (
                                IFNULL(tro.channel_fee, 0) / 10000
                            )
                        ) total_fee,
                        DATE_FORMAT(
                            tro.refund_money_time,
                            '%Y%m'
                        ) AS clearance_month,
                        toi.supplier_core_ep_id
                    FROM
                      t_refund_account tra
                    LEFT JOIN t_refund_order tro ON tro.id = tra.refund_order_id
                    LEFT JOIN t_order_item toi ON toi.id = tro.order_item_id
                    LEFT JOIN t_order o ON o.id = toi.order_id
                    WHERE
                        1 = 1
                        AND tra.`status` = 331
                        AND tra.profit &gt; 0
                        AND toi.supplier_core_ep_id = tra.core_ep_id
                        AND toi.supplier_core_ep_id != o.payee_ep_id
                        <if test="coreEpId != null">
                            AND toi.supplier_core_ep_id = #{coreEpId}
                        </if>
                        <if test="start != null">
                            AND tro.refund_money_time &gt;= #{start}
                        </if>
                        <if test="end != null">
                            AND tro.refund_money_time &lt;= #{end}
                        </if>
                    GROUP BY
                        toi.supplier_core_ep_id,
                        clearance_month
            ) a
        LEFT JOIN t_supplier_channel_bill tcb ON tcb.supplier_core_ep_id = a.supplier_core_ep_id AND tcb.bill_month = a.clearance_month
        WHERE
            1 = 1
            <if test="settled != null and settled">
                AND tcb.settled = 1
            </if>
            <if test="settled != null and !settled">
                AND tcb.settled is null
            </if>
        GROUP BY
            a.supplier_core_ep_id,
            a.clearance_month
    </select>

    <sql id="channelBillDetail">
        SELECT
            toi.number,
            toi.pro_name,
            toi.pro_sub_name,
            IFNULL(tocs.clearance_month,tra.refund_month) clearance_month,
            IFNULL(tocs.total_money,0) + IFNULL(tcws.total_money,0) clearance_money,
            TRUNCATE(IFNULL(tocs.total_fee,0) + IFNULL(tcws.total_fee,0),0) clearance_fee,
            IFNULL(tra.total_money,0) refund_money,
            TRUNCATE(IFNULL(tra.total_fee,0),0) refund_fee,
            TRUNCATE(IFNULL(tocs.total_fee,0) + IFNULL(tcws.total_fee,0) + IFNULL(tra.total_fee,0),0) fee
        FROM
            t_order_item toi
        LEFT JOIN t_order o ON o.id = toi.order_id
        LEFT JOIN (
            SELECT
                order_item_id,
                SUM(supplier_money) total_money,
                SUM(
                    supplier_money * (
                        IFNULL(channel_fee, 0) / 10000
                    )
                ) total_fee,
                DATE_FORMAT(clearance_time, '%Y%m') AS clearance_month
            FROM
                t_order_clearance_serial
            GROUP BY
                order_item_id,
                clearance_month
        ) tocs ON tocs.order_item_id = toi.id
        LEFT JOIN (
            SELECT
                tocs.order_item_id,
                - SUM(tcws.supplier_money) total_money,
                - SUM(
                    tcws.supplier_money * (
                        IFNULL(tcws.channel_fee, 0) / 10000
                    )
                ) total_fee,
                DATE_FORMAT(
                    tcws.clearance_washed_time,
                    '%Y%m'
                ) AS washed_month
            FROM
                t_clearance_washed_serial tcws
            LEFT JOIN t_order_clearance_serial tocs ON tocs.serial_no = tcws.clearance_serial_no
            GROUP BY
                tocs.order_item_id,
                washed_month
        ) tcws ON tcws.order_item_id = toi.id
        LEFT JOIN (
            SELECT
                tro.order_item_id,
                SUM(tra.profit) total_money,
                SUM(
                    tra.profit * (
                        IFNULL(tro.channel_fee, 0) / 10000
                    )
                ) total_fee,
                DATE_FORMAT(
                    tro.refund_money_time,
                    '%Y%m'
                ) AS refund_month
            FROM
                t_refund_account tra
            LEFT JOIN t_refund_order tro ON tro.id = tra.refund_order_id
            LEFT JOIN t_order_item toi ON toi.id = tro.order_item_id
            WHERE
                1 = 1
            AND tra.`status` = 331
            AND tra.profit &gt; 0
            AND toi.supplier_core_ep_id = tra.core_ep_id
            GROUP BY
                tro.order_item_id,
                refund_month
        ) tra ON tra.order_item_id = toi.id
        WHERE
            1 = 1
        AND IFNULL(tocs.total_fee,0) + IFNULL(tcws.total_fee,0) + IFNULL(tra.total_fee,0) &gt; 0
        <if test="coreEpId != null">
            AND toi.supplier_core_ep_id = #{coreEpId}
        </if>
        <if test="saleCoreEpId != null">
            AND o.payee_ep_id = #{saleCoreEpId}
        </if>
        <if test="selectMonth != null">
            AND IFNULL(tocs.clearance_month,tra.refund_month) = #{selectMonth}
        </if>
        GROUP BY
            toi.id,
            tocs.clearance_month
    </sql>

    <select id="selectChannelBillDetail" resultType="map">
        <include refid="channelBillDetail" />
        <include refid="limit" />
    </select>

    <select id="selectChannelBillDetailCount" resultType="int">
        SELECT count(*) FROM (
        <include refid="channelBillDetail" />
        ) a
    </select>
    <select id="selectItemQuantityCount" resultType="java.lang.Integer">
      select IFNULL(SUM(quantity),0)  from t_order_clearance_serial where order_item_id=#{order_item_id}
    </select>

    <select id="selectItemClearanceSerial" resultMap="BaseResultMap">
        select *  from t_order_clearance_serial where order_item_id=#{order_item_id}
    </select>

    <sql id="limit">
        <if test="record_start != null and record_count != null">
            limit #{record_start},#{record_count}
        </if>
        <if test="record_start != null and record_count == null">
            limit #{record_start}
        </if>
        <if test="record_start == null and record_count != null">
            limit 0,#{record_count}
        </if>
    </sql>
</mapper>