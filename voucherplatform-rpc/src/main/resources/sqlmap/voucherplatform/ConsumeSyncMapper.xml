<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.all580.voucherplatform.dao.ConsumeSyncMapper">
    <resultMap id="BaseResultMap" type="com.all580.voucherplatform.entity.ConsumeSync">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="supply" jdbcType="INTEGER" property="supply"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
    `id`, `supply`, `start_time`, `end_time`, `create_time`, `status`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_consume_sync
        where `id` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_consume_sync
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.all580.voucherplatform.entity.ConsumeSync">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_consume_sync (`supply`, `start_time`, `end_time`,
        `create_time`, `status`)
        values (#{supply,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
        #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.all580.voucherplatform.entity.ConsumeSync">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_consume_sync
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="supply != null">
                `supply`,
            </if>
            <if test="startTime != null">
                `start_time`,
            </if>
            <if test="endTime != null">
                `end_time`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="supply != null">
                #{supply,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.all580.voucherplatform.entity.ConsumeSync">
        update t_consume_sync
        <set>
            <if test="supply != null">
                `supply` = #{supply,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                `start_time` = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                `end_time` = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.all580.voucherplatform.entity.ConsumeSync">
    update t_consume_sync
    set `supply` = #{supply,jdbcType=INTEGER},
      `start_time` = #{startTime,jdbcType=TIMESTAMP},
      `end_time` = #{endTime,jdbcType=TIMESTAMP},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>

    <sql id="limit">
        <if test="record_start != null and record_count != null">
            limit #{record_start},#{record_count}
        </if>
        <if test="record_start != null and record_count == null">
            limit #{record_start}
        </if>
        <if test="record_start == null and record_count != null">
            limit 0,#{record_count}
        </if>
    </sql>
    <select id="selectByTimeAndPlatformRole" resultType="map">
        SELECT DISTINCT tcs.* FROM t_consume_sync tcs
        JOIN t_platformrole tp ON tp.supply_id = tcs.supply
        <include refid="selectByTimeAndPlatformRoleWhere"/>
        <include refid="limit"/>
    </select>
    <select id="selectByTimeAndPlatformRoleCount" resultType="int">
        SELECT count(DISTINCT tcs.id) FROM t_consume_sync tcs
        JOIN t_platformrole tp ON tp.supply_id = tcs.supply
        <include refid="selectByTimeAndPlatformRoleWhere"/>
    </select>
    <sql id="selectByTimeAndPlatformRoleWhere">
        WHERE 1=1 AND tp.authId IN
        <foreach collection="auths" item="item" open="(" close=")">
            #{item}
        </foreach>
        AND tcs.start_time &gt;= #{startTime} AND tcs.end_time &lt;= #{endTime}
    </sql>
</mapper>